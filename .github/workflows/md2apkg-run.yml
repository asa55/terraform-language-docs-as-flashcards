name: Run md2apkg converter

on:
  workflow_dispatch:

jobs:
  job:
    name: Build Anki Flashcard Deck from .md
    runs-on: ubuntu-latest
    steps:
      - name: step-git-checkout
        uses: actions/checkout@v3
      - name: step-define-package-json
        run: |
          touch package.json
          printf '{ "dependencies": { "md2apkg": "^1.3.0" } }' >> package.json
          npm install
      - name: step-use-node-LTS
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
      - name: step-run-preprocessor
        run: |
          touch Deck.md
          cat ./Deck/index.md >> Deck.md
          printf "\n\n" >> Deck.md
          find ./Deck/ -name "*.md" | while read _file; do 
            _path=${_file%\/*}
            _tag=$(echo "$_path" | sed "s/\//::/g" | sed "s/\.//g" | sed "s/\::Deck//g")
            _tag_="\<\!\-\- md2apkg tags \-\-\>"
            sed -i "\@##@a $_tag_" $_file
            while (echo $_tag | grep "::"); do
              sed -i "s/[<]\!\-\- md2apkg tags /\<\!\-\- md2apkg tags ${_tag#::*} /g" $_file
              _tag="${_tag%::*}"
            done
            printf "\n\n" >> $_file
            cat $_file >> Deck.md
          done
          sed -i "s/[<]\!\-\- md2apkg tags \-\-[>]//g" Deck.md
      - name: step-run-npm-commands
        run: |
          npm ci
          npx md2apkg -o Deck.apkg Deck.md
      - name: step-upload-artifacts
        uses: actions/upload-artifact@v3
        id: upload
        with:
          name: flashcards
          path: Deck.apkg
      - name: step-download-artifacts
        uses: actions/download-artifact@v3
        id: download
        with:
          name: flashcards
      - name: step-echo-download-path
        run: echo ${{steps.download.outputs.download-path}}
